$max-content-width: 1400px;
$breakpoint-sm: 600px;
$breakpoint-md: 768px;
$breakpoint-lg: 1024px;
$breakpoint-xl: 1280px;

@mixin sm {
  @media (min-width: #{$breakpoint-sm}) {
    @content;
  }
}

@mixin md {
  @media (min-width: #{$breakpoint-md}) {
    @content;
  }
}

@mixin lg {
  @media (min-width: #{$breakpoint-lg}) {
    @content;
  }
}

@mixin xl {
  @media (min-width: #{$breakpoint-xl}) {
    @content;
  }
}

@mixin ellipsis {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

@mixin content-width {
  max-width: $max-content-width;
  width: calc(100% - 20px);
  margin: auto;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin card-layout($padding: 25px, $desktop-padding: 32px) {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: $padding;
  border-radius: 5px;

  @include sm {
    padding: $desktop-padding;
  }
}

@mixin max-lines-ellipsis($lines) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  word-break: break-all;
}

@mixin hover-card-shadow {
  transition: box-shadow 0.25s;
  box-shadow: var(--bs-card);

  &:hover {
    box-shadow: var(--bs-card-inset);
  }
}

@mixin viewpoint-related-scale($element-width) {
  @for $i from 12 through 64 {
    @media (min-width: #{$i * 25px}) {
      $width: $i * 25px - 150px;
      $scale: ($width + 0px) / $element-width;
      transform: scale(min($scale, 1));
    }
  }
}

@mixin viewpoint-related-height($element-width) {
  @for $i from 12 through 64 {
    @media (min-width: #{$i * 25px}) {
      $width: $i * 25px - 150px;
      height: $width * 9 / 16 + 50px;
      max-height: $width * 9 / 16 + 50px;
    }
  }
}

@mixin landscape-only {
  @media screen and (orientation: portrait) {
    display: none;
  }
}

@mixin portrait-only {
  @media screen and (orientation: landscape) {
    display: none;
  }
}
@mixin debug {
  & *,
  & {
    background-color: rgb(0 125 0 / 0.08) !important;
  }
}
